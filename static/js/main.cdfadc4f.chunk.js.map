{"version":3,"sources":["theme/images/slack_icon.png","../node_modules/x-utils-es/src sync","../node_modules/x-utils-es/esm sync","theme/material.theme.js","utils/utils.js","store/api.js","store/mobx.store.js","components/Navbar.js","components/Messages.js","components/withStore.hoc.js","components/product.models.js","components/Product.js","components/Pagination.js","pages/Exchange.js","components/withProduct.hoc.js","components/icons/SlackIcon.js","components/SocialMedia.js","pages/ProductDetail.js","App.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","theme","createMuiTheme","palette","primary","main","secondary","muted","contrastThreshold","tonalOffset","background","paper","fontFamily","fetchHandler","async","response","ok","json","body","Promise","reject","resp","err","isObject","error","status","timeoutHandler","timeout","arguments","length","undefined","controller","AbortController","timer","setTimeout","abort","delay","then","n","clearTimeout","apiUrlBase","process","api","base","exchanges","params","isEmpty","concat","q","queryString","stringify","exchangesProduct","Object","freeze","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","title","Links","props","first","second","name","route","console","log","React","createElement","Fragment","NavLink","className","activeClassName","to","exact","toUpperCase","withRouter","_ref","routeName","classes","AppBar","position","Toolbar","IconButton","edge","color","aria-label","MenuIcon","Typography","variant","width","marginTop","backgroundColor","NavigateToLink","link","Messages","type","message","value","data-testid","Alert","severity","withStoreReady","Component","entity","observer","mobxstore","page","useParams","isNaN","Number","Message","pg","setPage","useState","useEffect","fetch_exchanges","per_page","pagedPerPage","state","LinearProgress","configure","enforceActions","ProductModel","constructor","item","baseUrl","makeObservable","this","observable","copy","showSlack","facebook_url","url","twitter_handle","telegram_url","reddit_url","slack_url","filter","margin","padding","maxWidth","image","height","img","display","maxHeight","listGoup","border","Product","history","prod","Paper","Grid","container","ButtonBase","alt","src","xs","sm","direction","gutterBottom","country","Link","target","href","style","cursor","detailUrl","trust_score_rank","TrendingUpIcon","fontSize","PaginationBottom","perPage","pageState","Pagination","count","shape","onChange","handleChange","env","push","pathname","onRouteChange","didLoad","setDidLoad","rName","map","inx","key","routeOnChange","onReadyHoc","productID","setProd","fetch_exchangeProduct","SlackIcon","SlackPng","ListItem","SocialMedia","socialList","Alink","assign","button","component","List","ListItemIcon","FacebookIcon","TwitterIcon","RedditIcon","TelegramIcon","Divider","shapeCircle","borderRadius","ProductDetail","productDetail","description","year_established","ariant","withProduct","loggerSetting","cachedProduct","cachedExchangePaged","apiBase","catch","runInAction","debug","fetch","method","headers","signal","sort","a","b","DOMException","onerror","toString","App","setRouteName","BrowserRouter","basename","ThemeProvider","Navbar","Switch","Route","path","Redirect","Exchange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdfadc4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/slack_icon.2522dee8.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 80;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 91;","\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            // light: will be calculated from palette.primary.main,\r\n            main: '#00acc1'\r\n            // dark: will be calculated from palette.primary.main,\r\n            // contrastText: will be calculated to contrast with palette.primary.main\r\n        },\r\n        secondary: {\r\n            main: '#ffcc80'\r\n            // dark: will be calculated from palette.secondary.main,\r\n            //  contrastText: '#ffcc00',\r\n        },\r\n        muted: {\r\n            main: '#aaa'\r\n        },\r\n\r\n        // Used by `getContrastText()` to maximize the contrast between\r\n        // the background and the text.\r\n        contrastThreshold: 3,\r\n        // Used by the functions below to shift a color's luminance by approximately\r\n        // two indexes within its tonal palette.\r\n        // E.g., shift from Red 500 to Red 300 or Red 700.\r\n        tonalOffset: 0.2,\r\n        background: {\r\n            paper: '#f4f4f4'\r\n        },\r\n        fontFamily: 'Roboto, \"Gill Sans\", \"Gill Sans MT\", \"Trebuchet MS\", sans-serif'\r\n    }\r\n})\r\n","\r\nimport { isObject, delay } from 'x-utils-es'\r\n\r\n/**\r\n * fetch handler if status error reject response\r\n * @param {*} response \r\n */\r\nexport const fetchHandler = async (response) => {\r\n    if (response.ok) return response.json()\r\n    else {\r\n        \r\n        if (!response.body) {\r\n            return Promise.reject('body has no content') \r\n        }\r\n\r\n        let resp       \r\n        try {\r\n            resp = await response.json() // {message,code,error}\r\n        } catch (err) {\r\n            return Promise.reject(err)\r\n        }\r\n\r\n        // if our server is up we know what to expect, else can return empty string\r\n        if (isObject(resp)) {\r\n            return Promise.reject(resp.error)\r\n        } else return Promise.reject(resp || \"HTTP-Error: \" + resp.status)\r\n    }\r\n}\r\n\r\n/**\r\n * Fetch timeout helper\r\n * @param {*} timeout \r\n */\r\nexport const timeoutHandler = (timeout = 5000) => {\r\n    const controller = new AbortController()\r\n    const timer = setTimeout(() => controller.abort('Aborted'), timeout)\r\n    delay(100).then(n => {\r\n        clearTimeout(timer)\r\n    })\r\n    return controller \r\n}\r\n","/**\r\n * Refer to `https://www.coingecko.com/api/documentations/v3#/` for details\r\n */\r\nimport queryString from 'query-string'\r\nimport { isEmpty } from 'x-utils-es'\r\n\r\n// https://api.coingecko.com/api/v3\r\nconst apiUrlBase = process.env.REACT_APP_SERVER_API || process.env.REACT_APP_COINGECKO_API\r\n\r\nconst api = {\r\n    base: apiUrlBase,\r\n    /**\r\n     * (GET) \r\n     * @param {*} {params.per_page, params.page}` how many items to display per result\r\n     * refer to: `https://www.coingecko.com/api/documentations/v3#/exchanges_(beta)/get_exchanges`\r\n     * @returns {*} `[{id,name,year_established,country,description,url,image,has_trading_incentive,has_trading_incentive,trust_score,trust_score_rank,trade_volume_24h_btc,trade_volume_24h_btc_normalized},...]`\r\n     */\r\n    exchanges: (params = {}) => {\r\n        if (isEmpty(params)) return `${apiUrlBase}/exchanges` \r\n        else {\r\n            let q = queryString.stringify(params)\r\n            return `${apiUrlBase}/exchanges?${q}`\r\n        }\r\n    },\r\n\r\n    /**\r\n     * (GET)\r\n     * @param {*} id \r\n     */\r\n    exchangesProduct: (id) => `${apiUrlBase}/exchanges/${id}`\r\n}\r\n\r\nexport { api } // >> Object.freeze(api)\r\n","import { observable, makeObservable, runInAction } from \"mobx\"\r\nimport { fetchHandler, timeoutHandler } from '../utils'\r\nimport { debug, log, onerror } from 'x-utils-es'\r\nimport { api } from './api'\r\nObject.freeze(api) // no mods please!\r\nexport class MobxStore {\r\n    state = \"pending\" // \"pending\", \"ready\", \"error\"\r\n    exchanges = []\r\n    productDetail={}\r\n    // caching same requests\r\n    cachedProduct={}\r\n    cachedExchangePaged={}\r\n    apiBase = api.base\r\n    pagedPerPage = 10\r\n\r\n    constructor() {\r\n        makeObservable(this, {\r\n            state: observable,\r\n            productDetail: observable,\r\n            exchanges: observable\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * Fetch is controlled via withStore.hoc component before the page loads\r\n     * Caching results on subsequent calls to same route\r\n     * @param {*} params `{per_page,page}`\r\n     * @param {*} timeout:number to exit on long wait\r\n     * @returns\r\n     * @memberof MobxStore\r\n     */\r\n    fetch_exchanges(params, timeout = 5000) {\r\n        if (!params.page) params.page = 1\r\n        \r\n        this.state = 'pending'  \r\n \r\n        if (isNaN(Number(params.page))) { \r\n\r\n            return Promise.reject('fetch_exchanges wrong page provided').catch(err => {\r\n                runInAction(() => {\r\n                    this.state = \"error\"\r\n                })\r\n            })\r\n        }\r\n        \r\n        if (this.cachedExchangePaged[params.page]) {\r\n\r\n            runInAction(() => {\r\n                log('[exchanges][paged][cached]')\r\n                this.exchanges = this.cachedExchangePaged[params.page]\r\n                this.state = 'ready'\r\n            })   \r\n\r\n            return Promise.resolve(this.cachedExchangePaged[params.page])\r\n        }\r\n    \r\n        this.exchanges = []\r\n        debug('[fetch]', api.exchanges(params))\r\n        \r\n        return fetch(api.exchanges(params), {\r\n            // mode: 'no-cors',\r\n            method: 'GET',\r\n\r\n            headers: { \r\n                // 'Access-Control-Allow-Origin': \"*\",\r\n                'Function-Code': `${process.env.REACT_APP_FUNCTION_CODE}`,\r\n                'Content-Type': 'application/json;charset=utf-8' },\r\n            signal: timeoutHandler(timeout).signal\r\n        }).then(fetchHandler)\r\n            .then((response) => {\r\n                runInAction(() => {\r\n                    response = response || []\r\n                    response.sort((a, b) => b.trust_score_rank - a.trust_score_rank)\r\n                    \r\n                    this.exchanges = response || []           \r\n                    this.cachedExchangePaged[params.page] = response\r\n                    this.state = \"ready\"\r\n                    log('[exchanges]', this.exchanges)\r\n                })\r\n\r\n            }).catch(err => {\r\n\r\n                runInAction(() => {\r\n                    this.state = \"error\"\r\n                })\r\n              \r\n                if (err instanceof DOMException) {\r\n                    onerror('[fetch_exchanges]', err.toString())\r\n                     \r\n                } else {\r\n                    onerror('[fetch_exchanges]', err)\r\n                }               \r\n            })\r\n    }\r\n\r\n    /**\r\n     * Fetch is controlled via withProduct.hoc component before the page loads\r\n     * Caching results on subsequent calls to same route\r\n     * @param {*} id\r\n     * @param {*} timeout:number to exit on long wait\r\n     * @memberof MobxStore\r\n     */\r\n    fetch_exchangeProduct(id, timeout = 5000) {\r\n        this.state = 'pending'\r\n\r\n        if (this.cachedProduct[id]) {\r\n            runInAction(() => {\r\n                this.productDetail = this.cachedProduct[id]\r\n                this.state = 'ready'\r\n                log('[productDetail][cached]')\r\n            })       \r\n            return Promise.resolve(this.cachedProduct[id])\r\n        }\r\n      \r\n        this.productDetail = {}\r\n        debug('[fetch]', api.exchangesProduct(id))\r\n\r\n        return fetch(api.exchangesProduct(id), {\r\n    \r\n            method: \"GET\",\r\n            //  mode: \"no-cors\",\r\n            headers: {\r\n                // \"Access-Control-Allow-Origin\": \"*\",\r\n                'Function-Code': `${process.env.REACT_APP_FUNCTION_CODE}`,\r\n                \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            signal: timeoutHandler(timeout).signal\r\n        })\r\n            .then(fetchHandler)\r\n            .then((response) => {\r\n                runInAction(() => {\r\n                    this.productDetail = response || {}\r\n                    this.cachedProduct[id] = response\r\n                    this.state = \"ready\"\r\n                    log(\"[productDetail]\", this.productDetail)\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                runInAction(() => {\r\n                    this.state = \"error\"\r\n                })\r\n\r\n                if (err instanceof DOMException) {\r\n                    onerror(\"[fetch_exchangeProduct]\", err.toString())\r\n                } else {\r\n                    onerror(\"[fetch_exchangeProduct]\", err)\r\n                }\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport { NavLink, withRouter } from \"react-router-dom\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    }\r\n}))\r\n\r\nlet Links = (props) => {\r\n    const { first, second } = props\r\n    let { name, route } = first || {}\r\n    console.log('route', route)\r\n    return (<React.Fragment>\r\n        {route && !second ? (<NavLink\r\n            className=\"btn btn-sm btn-secondary text-white py-0 px-0 strong\"\r\n            activeClassName=\"is-active\"\r\n            to={(`/app/` + route)}\r\n            exact>\r\n            {name.toUpperCase()}</NavLink>)\r\n            : route && second ? (<><NavLink\r\n                className=\"btn btn-sm btn-secondary text-white py-0 px-0 base-link d-none-sm d-block-md\"\r\n                to={(`/app/` + route)}\r\n                exact>\r\n                {name.toUpperCase()}</NavLink><span className=\"base-link-split\">&nbsp;/&nbsp;</span><NavLink\r\n                className=\"btn btn-sm btn-secondary text-white py-0 px-0 dest-link strong\"\r\n                activeClassName=\"is-active\"\r\n                to={second}\r\n                exact>\r\n                {second.toUpperCase()}</NavLink></>) : null}\r\n    </React.Fragment>)\r\n}\r\n\r\nfunction Nav({ routeName }) {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root + ' navbar'}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        <Links {...routeName}/>\r\n                    </Typography>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Nav)\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { NavLink } from \"react-router-dom\"\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2)\r\n        },\r\n        '& .d-flex': {\r\n            backgroundColor: 'rgb(253, 236, 234)'\r\n        }\r\n    }\r\n}))\r\n\r\nconst NavigateToLink = (props) => {\r\n\r\n    return (<React.Fragment>\r\n        {props.link ? <NavLink\r\n            className=\"btn btn-sm btn-outline-primary\"\r\n            activeClassName=\"is-active\"\r\n            to={(`/app/${props.link}`)}\r\n            exact>\r\n            {props.link}\r\n        </NavLink> : null}\r\n    </React.Fragment>)\r\n}\r\n\r\n/**\r\n *  `<Message type='' value=''/>`  types: [error,info,success]\r\n * display message based on props\r\n * @param {*} props //type,value \r\n */\r\nexport default function Messages(props) {\r\n    const classes = useStyles()\r\n    const type = props.type\r\n    const message = props.value\r\n    const link = props.link\r\n\r\n    if (!message) return null\r\n\r\n    return (\r\n        <div className={classes.root + ' mx-1'} data-testid=\"message\" >\r\n            {type === 'error' ? (<div className=\"d-flex flex-row justify-content-start align-items-center w-100\"><Alert severity=\"error\">{message}</Alert><NavigateToLink link={link || false}/></div>) : type === 'warning' ? (<Alert severity=\"warning\">{message}</Alert>)\r\n                : type === 'info' ? (<Alert severity=\"info\">{message}</Alert>)\r\n                    : type === 'success' ? (<Alert severity=\"success\">{message}</Alert>) : null}  \r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Message from './Messages'\r\nimport { useParams } from \"react-router-dom\"\r\nconst withStoreReady = (Component, entity) => {\r\n    const Hoc = observer((props) => {\r\n        const { mobxstore } = props\r\n        const { page } = useParams()\r\n\r\n        if (isNaN(Number(page))) {\r\n            return (<Message type='error' value='Invalid exchange page' link='exchanges'/>) \r\n        }\r\n\r\n        const [pg, setPage] = React.useState(null)\r\n        React.useEffect(() => {\r\n            if (pg === null || pg !== page) {               \r\n                mobxstore.fetch_exchanges({ page, per_page: mobxstore.pagedPerPage }).then(n => {\r\n                    setPage(page)\r\n                })\r\n            }\r\n        }, [page, pg, mobxstore])\r\n\r\n        if (mobxstore.state === 'error') return (<Message type='error' value='No data from server' />) \r\n        if (mobxstore.state === 'ready') return (<Component {...props}/>)\r\n        else return (<div className=\"mt-5 pt-4 row\"><div className=\"col-8 m-auto\"><LinearProgress /></div></div>)\r\n    })\r\n    return Hoc\r\n}\r\n\r\nexport default withStoreReady\r\n","// NOTE this is not a component but a class model for Product.js and ProductDetail.js\r\n\r\nimport { makeObservable, observable, configure } from \"mobx\"\r\nimport { copy } from 'x-utils-es'\r\n\r\nconfigure({\r\n    enforceActions: \"never\"\r\n})\r\n\r\nexport class ProductModel {\r\n    entity = '' // this model is used by Product and ProductDetail \r\n    item = {}\r\n    status = '' // [pending,error,ready]\r\n    baseUrl = ''\r\n\r\n    constructor(entity = '', item = {}, baseUrl) {\r\n        makeObservable(this, {\r\n            item: observable\r\n        })\r\n        this.entity = entity\r\n        this.baseUrl = baseUrl\r\n        this.item = copy(item)\r\n        this.showSlack = true\r\n    }\r\n\r\n    get detailUrl() {\r\n        return `${this.baseUrl}/${this.item.id}`\r\n    }\r\n    /**\r\n     * Get a list of formatted social media items `[{name,type,url},...]`\r\n     *\r\n     * @readonly\r\n     * @memberof ProductModel\r\n     */\r\n    get socialList() {\r\n        return [this.item.facebook_url ? { name: 'Facebook', type: 'facebook', url: this.item.facebook_url } : null, this.item.twitter_handle ? { name: 'Twitter', type: 'twitter', url: `http://twitter.com/${this.item.twitter_handle}` } : null, this.item.telegram_url ? { name: 'Telegram', type: 'telegram', url: this.item.telegram_url } : this.item.reddit_url ? { name: 'Reddit', url: this.item.reddit_url, type: 'reddit' } : null, this.item.slack_url ? { name: 'Slack', url: this.item.slack_url, type: 'slack' } : null\r\n        ].filter(n => !!n)\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ButtonBase from '@material-ui/core/ButtonBase'\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Link from '@material-ui/core/Link'\r\nimport { ProductModel } from './product.models'\r\nimport { NavLink } from \"react-router-dom\"\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp'\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin: 'auto',\r\n        maxWidth: 500\r\n    },\r\n    image: {\r\n        width: 128,\r\n        height: 128\r\n    },\r\n    img: {\r\n        margin: 'auto',\r\n        display: 'block',\r\n        maxWidth: '100%',\r\n        maxHeight: '100%'\r\n    },\r\n    listGoup: {\r\n        '& li': {\r\n            border: 'none'\r\n        }\r\n    }\r\n}))\r\n  \r\nconst Product = observer(({ mobxstore, item, history, page }) => {\r\n    const baseUrl = `/app/exchanges/${page}`\r\n    const prod = new ProductModel('Product', item, baseUrl)\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root + ' product-item my-4'}>\r\n            <Paper className={classes.paper + ' product-paper'}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item className='product-grid'>\r\n                        <ButtonBase className={classes.image + ' m-auto button-base'}>\r\n                            <img className={classes.img} alt=\"complex\" src={prod.item.image} />\r\n                        </ButtonBase>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm container className=\"pt-4\">\r\n                        <Grid item xs container direction=\"column\" spacing={2}>\r\n                            <Grid item xs>\r\n                                <Typography gutterBottom variant=\"subtitle1\" className=\"my-0 larger\">\r\n                                    <strong>{prod.item.name}</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" gutterBottom className=\"my-0\">\r\n                                    <span className=\"text-muted strong\">Country: </span>{prod.item.country}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" >\r\n                                    <span className=\"text-muted align-left strong\">URL: </span>  \r\n                                    <Link \r\n                                        target=\" _blank\"\r\n                                        className=\"px-0 btn btn-sm text-primary align-left smaller\"\r\n                                        href={prod.item.url}>\r\n                                        {prod.item.url}\r\n                                    </Link>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item className=\"my-0\">\r\n                            \r\n                                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                                    <NavLink\r\n                                        className=\"btn btn-sm btn-secondary text-white detail-link\"\r\n                                        activeClassName=\"is-active\"\r\n                                        to={prod.detailUrl}\r\n                                        exact>\r\n                                    Detail\r\n                                    </NavLink>\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                        <Grid item className={classes.listGoup}>\r\n                            <ul className=\"list-group list-group-horizontal p-0\">\r\n                                <li className=\"list-group-item py-0 pl-0 pr-1 mt-1\">{prod.item.trust_score_rank}</li>\r\n                                <li className=\"list-group-item p-0 \"><TrendingUpIcon fontSize=\"small\" color=\"primary\" /></li>\r\n                            </ul>                                    \r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n                    \r\nexport default Product\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            marginTop: theme.spacing(2)\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function PaginationBottom(props) {\r\n    const classes = useStyles()\r\n    const { perPage, history, pageState } = props\r\n    const [page, setPage] = React.useState(1)\r\n    const handleChange = (env, value) => {    \r\n        setPage(value)   \r\n        history.push({ pathname: `/app/exchanges/${value}` }) \r\n    }\r\n\r\n    return ( \r\n        <div className={classes.root + ' row'}>\r\n            <div className=\"col-12 mt-1 mb-5\">\r\n                <Pagination \r\n                    data-testid=\"pagination\"\r\n                    className=\"d-flex justify-content-center\" page={(pageState || page)} count={perPage} variant=\"outlined\" shape=\"rounded\" onChange={ handleChange}/>\r\n            </div>       \r\n        </div>\r\n    )\r\n}\r\n","import \"../theme/scss/pages/exchange.component.scss\"\nimport React from 'react'\nimport withStoreReady from '../components/withStore.hoc'\nimport { useParams } from \"react-router-dom\"\nimport Product from '../components/Product'\nimport { withRouter } from \"react-router-dom\"\nimport Pagination from '../components/Pagination'\nimport { log } from 'x-utils-es/esm'\n\nfunction Exchange(props) {\n    const { mobxstore, onRouteChange, history } = props \n    const { name, page } = useParams()\n\n    const [didLoad, setDidLoad] = React.useState(false)\n   \n    React.useEffect(() => {\n        if (!didLoad) {\n            let rName = name + '/' + page       \n            setDidLoad(true)\n            onRouteChange({ name, page, route: rName })   \n        }\n    }, [didLoad, onRouteChange, page, name])\n\n    return (\n        <div data-testid={(`exchange-wrap-page-${page}`)} id=\"exchange-wrap\">\n            <div className=\"row\">\n                <div className=\"col-sm-12 col-md-8 m-auto \">\n                    <div className=\"d-flex justify-content-center align-items-center m-auto\">\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-sm-12 col-md-7 m-auto p-4\">\n                   \n                    {(mobxstore.exchanges || []).length ? mobxstore.exchanges.map((item, inx) => {\n                        return (<Product key={inx} item={item} mobxstore={mobxstore} page={page}/>)\n                    }) : 'no exchanges available yet!'}\n                   \n                </div>\n            </div>\n            <Pagination \n                pageState={Number(page)} history={history} perPage={mobxstore.pagedPerPage} routeOnChange={(page) => {\n                    log('route on change', page)\n                }}/>\n        </div>\n    )\n}\n\nexport default withRouter(withStoreReady(Exchange, 'exchange'))\n","\r\nimport React from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Message from './Messages'\r\nconst onReadyHoc = (Component) => {\r\n\r\n    const Hoc = (props) => {\r\n        const { productID } = useParams()\r\n        const { mobxstore } = props\r\n        const [prod, setProd] = React.useState(null)\r\n\r\n        React.useEffect(() => {\r\n            if (prod === null) {\r\n                mobxstore.fetch_exchangeProduct(productID).then(n => {\r\n                    setProd(productID)                \r\n                })\r\n            }\r\n        }, [prod, productID, mobxstore])\r\n\r\n        if (mobxstore.state === 'ready') {\r\n            return (<Component {...props} />)\r\n        }\r\n\r\n        if (mobxstore.state === 'pending') {\r\n            return (<div className=\"mt-5 pt-4 row\"><div className=\"col-8 m-auto\"><LinearProgress /></div></div>)\r\n        }\r\n\r\n        if (mobxstore.state === 'error') {\r\n            return (<Message type=\"error\" value=\"Invalid product page\" link=\"exchanges\"/>)\r\n        }\r\n    }\r\n\r\n    return Hoc\r\n}\r\n\r\nexport default onReadyHoc\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SlackPng from '../../theme/images/slack_icon.png'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: 'auto'\r\n    },\r\n    image: {\r\n        maxWidth: 20,\r\n        height: 'auto'\r\n    }\r\n}))\r\n \r\nexport default function SlackIcon() {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root + ' m-0'}>\r\n            <img className={classes.image} src={SlackPng} alt='Slack' />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport FacebookIcon from '@material-ui/icons/Facebook'\r\nimport TwitterIcon from '@material-ui/icons/Twitter'\r\nimport RedditIcon from '@material-ui/icons/Reddit'\r\nimport TelegramIcon from '@material-ui/icons/Telegram'\r\nimport SlackIcon from './icons/SlackIcon'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n    ListItem: {\r\n        width: 'inherit',\r\n        maxWidth: '30px'\r\n    }\r\n}))\r\n\r\nexport default function SocialMedia(props) {\r\n    const classes = useStyles()\r\n    const { socialList } = props\r\n    \r\n    function Alink(props) {\r\n        return <ListItem className={classes.ListItem + ' mx-1 px-0'} button component=\"a\" {...props} target=\" _blank\" />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <List component=\"nav\" aria-label=\"secondary mailbox folders\" className=\"d-flex flex-row justify-content-center\">\r\n                {socialList.map((item, inx) => {\r\n                    return (<Alink key={inx} href={item.url}>\r\n                        <ListItemIcon data-testid={(`social-ico-${inx}`)} >\r\n                            {item.type === 'facebook' ? (<FacebookIcon color=\"primary\"/>)\r\n                                : item.type === 'twitter' ? (<TwitterIcon color=\"primary\"/>)\r\n                                    : item.type === 'slack' ? (<SlackIcon/>)\r\n                                        : item.type === 'reddit' ? (<RedditIcon color=\"primary\"/>)\r\n                                            : item.type === 'telegram' ? (<TelegramIcon color=\"primary\"/>) : null    \r\n                            }\r\n\r\n                        </ListItemIcon>\r\n                    </Alink>)\r\n                })} \r\n            </List>\r\n            <Divider />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ButtonBase from '@material-ui/core/ButtonBase'\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Link from '@material-ui/core/Link'\r\nimport { useParams } from \"react-router-dom\"\r\nimport withProduct from '../components/withProduct.hoc'\r\nimport { ProductModel } from '../components/product.models'\r\nimport SocialMedia from '../components/SocialMedia'\r\nimport { NavLink, withRouter } from \"react-router-dom\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin: 'auto',\r\n        maxWidth: 500\r\n    },\r\n    image: {\r\n        width: 128,\r\n        height: 128\r\n    },\r\n    img: {\r\n        //  margin: 'auto',\r\n        display: 'block',\r\n        maxWidth: '100%',\r\n        maxHeight: '100%'\r\n    },\r\n    shape: {\r\n        backgroundColor: theme.palette.primary.secondary,\r\n        width: 12,\r\n        height: 12,\r\n        marginRight: '5px'\r\n    },\r\n    shapeCircle: {\r\n        borderRadius: '50%'\r\n    }\r\n}))\r\n\r\nconst ProductDetail = observer(({ mobxstore, onRouteChange }) => {\r\n\r\n    const { productID, page, name } = useParams()\r\n    const baseUrl = `/app/exchanges/${page}`\r\n    const prod = new ProductModel('productDetail', mobxstore.productDetail, baseUrl)\r\n    const [didLoad, setDidLoad] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (!didLoad) {\r\n            let first = { name, page, route: name + '/' + page }\r\n            onRouteChange(first, productID)\r\n            setDidLoad(true)\r\n        }\r\n    }, [didLoad, onRouteChange, name, page, productID])\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root + ' mt-5 product-detail my-4'} data-testid=\"product-detail\">\r\n            <Paper className={classes.paper + ' product-paper'}>\r\n                <Grid container spacing={2} >\r\n                    <Grid item className='product-grid'> \r\n                        <ButtonBase className={classes.image + ' m-auto button-base'}>\r\n                            <img className={classes.img + ' m-auto'} alt=\"complex\" src={prod.item.image} />\r\n                        </ButtonBase>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm container className=\"pt-4\">\r\n                        <Grid item xs container direction=\"column\" spacing={2}>\r\n                            <Grid item xs>\r\n                                <Typography gutterBottom variant=\"subtitle1\" className=\"my-0 larger\">\r\n                                    <strong>{prod.item.name}</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" gutterBottom className=\"my-1\">\r\n\r\n                                    <React.Fragment> \r\n                                        {prod.item.description ? (<><span className=\"text-muted cf strong\">Description:</span><span className=\" mt-0\">{prod.item.description}</span></>) : null}\r\n                                    </React.Fragment>\r\n           \r\n                                </Typography>\r\n\r\n                                <Typography variant=\"body2\" gutterBottom className=\"my-1\">\r\n                                    <span className=\"text-muted strong\">Country: </span>{prod.item.country}\r\n                                </Typography>\r\n\r\n                                <Typography variant=\"body2\" gutterBottom className=\"my-1\">\r\n                                    <span className=\"text-muted strong\">Trust Rank: </span>{prod.item.trust_score_rank}\r\n                                </Typography>\r\n\r\n                                <Typography variant=\"body2\" gutterBottom className=\"my-1\">\r\n                                    <span className=\"text-muted strong\">Established:</span> {prod.item.year_established}\r\n                                </Typography>\r\n                                \r\n                                { prod.item.url ? (<Typography variant=\"body2\" color=\"textSecondary\" >\r\n                              \r\n                                    <span className=\"text-muted align-left strong\">URL: </span>                               \r\n                                    <Link\r\n                                        target=\" _blank\"\r\n                                        className=\"px-0 btn btn-sm text-primary align-left smaller\"\r\n                                        href={prod.item.url}>\r\n                                        {prod.item.url}\r\n                                    </Link>\r\n                                </Typography>) : null}\r\n\r\n                                {prod.socialList.length ? (<div ariant=\"body2\" className=\"socialmedia-list\">\r\n                                    <SocialMedia socialList={prod.socialList}/>\r\n                                </div>) : null}\r\n\r\n                            </Grid>\r\n\r\n                            <Grid item className=\"my-0\">\r\n                                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                                    <NavLink\r\n                                        className=\"btn btn-sm btn-secondary text-white\"\r\n                                        activeClassName=\"is-active\"\r\n                                        to={prod.baseUrl}\r\n                                        exact>\r\n                                        Back to Exchanges\r\n                                    </NavLink>\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(withProduct(ProductDetail))\r\n","import React from \"react\"\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\"\nimport { theme } from \"./theme\"\nimport { ThemeProvider } from \"@material-ui/core/styles\"\nimport { MobxStore } from \"./store\"\nimport Navbar from \"./components/Navbar\"\nimport Exchange from \"./pages/Exchange\"\nimport ProductDetail from \"./pages/ProductDetail\"\nimport { loggerSetting, log } from \"x-utils-es\"\n\nif (process.env.NODE_ENV === \"production\") {\n    loggerSetting(\"log\", \"off\")\n    loggerSetting(\"debug\", \"off\")\n}\n\nif (process.env.NODE_ENV === \"development\") {\n    log(\"IN_DEVELOPMENT_MODE\")\n}\n\nconst mobxstore = new MobxStore()\nfunction App() {\n    const [routeName, setRouteName] = React.useState({})\n    const onRouteChange = (first, second) => {\n        setRouteName({ first, second })\n    }\n\n    return (\n        <BrowserRouter basename={process.env.NODE_ENV === 'production' ? 'coingecko-exchange' : ''}>\n            <ThemeProvider theme={theme}>\n                <Navbar routeName={routeName} />\n                <div className=\"container-fluid mt-3\">\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Redirect to=\"/app/exchanges/1\" />\n                        </Route>\n\n                        <Route exact path=\"/app\">\n                            <Redirect to=\"/app/exchanges/1\" />\n                        </Route>\n                        <Route exact path=\"/app/exchanges\">\n                            <Redirect to=\"/app/exchanges/1\" />\n                        </Route>\n\n                        <Route exact path=\"/exchanges/:name\">\n                            <Redirect to=\"/app/exchanges/1\" />\n                        </Route>\n\n                        <Route exact path=\"/app/:name/:page\">\n                            <Exchange\n                                mobxstore={mobxstore}\n                                onRouteChange={(first) => onRouteChange(first)}\n                            />\n                        </Route>\n\n                        <Route exact path=\"/app/:name/:page/:productID\">\n                            <ProductDetail\n                                mobxstore={mobxstore}\n                                onRouteChange={(first, second) => onRouteChange(first, second)}\n                            />\n                        </Route>\n                    </Switch>\n                </div>\n            </ThemeProvider>\n        </BrowserRouter>\n    )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./theme/scss/styles.scss\" // < base theme\nimport App from \"./App\"\n\nReactDOM.render(\n\n    <App />,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}